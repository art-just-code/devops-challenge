name: Terraform_plan

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path: [clickhouse, postgres, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Terraform Format
        run: terraform -chdir=${{ matrix.path }} fmt -check -recursive
      - name: Terraform Init
        run: terraform -chdir=${{ matrix.path }} init
      - name: Terraform Validate
        run: terraform -chdir=${{ matrix.path }} validate -no-color
      - name: Terraform Plan
        run: terraform -chdir=${{ matrix.path }} plan -out=tfplan -input=false
      - name: Upload Terraform Plan artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan-${{ matrix.path }}
          path: ${{ matrix.path }}/tfplan

  apply:
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [plan]
    environment:
      name: production
    strategy:
      matrix:
        path: [clickhouse, postgres, redis]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1
        with:
          terraform_wrapper: false
      - name: Download Terraform Plan artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan-${{ matrix.path }}
          path: ${{ matrix.path }}/tfplan
      - name: Terraform Init
        run: terraform -chdir=${{ matrix.path }} init
      - name: Terraform Apply
        run: terraform -chdir=${{ matrix.path }} apply -auto-approve
